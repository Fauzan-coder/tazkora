generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  name          String
  email         String   @unique
  password      String
  role          Role     @default(EMPLOYEE)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  managerId     String?
  createdIssues Issue[]  @relation("IssueCreator")
  assignedTasks Task[]   @relation("TaskAssignee")
  createdTasks  Task[]   @relation("TaskCreator")
  managedBy     User?    @relation("ManagesToEmployees", fields: [managerId], references: [id])
  manages       User[]   @relation("ManagesToEmployees")
}

model Task {
  id          String     @id @default(cuid())
  title       String
  description String?
  status      TaskStatus @default(ONGOING)
  priority    Priority   @default(MEDIUM)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  dueDate     DateTime?
  creatorId   String
  assigneeId  String?
  issues      Issue[]
  assignee    User?      @relation("TaskAssignee", fields: [assigneeId], references: [id])
  creator     User       @relation("TaskCreator", fields: [creatorId], references: [id])
}

model Issue {
  id          String      @id @default(cuid())
  title       String
  description String
  status      IssueStatus @default(OPEN)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  creatorId   String
  taskId      String?
  creator     User        @relation("IssueCreator", fields: [creatorId], references: [id])
  task        Task?       @relation(fields: [taskId], references: [id])
}

enum Role {
  HEAD
  MANAGER
  EMPLOYEE
}

enum TaskStatus {
  ONGOING
  FINISHED
  BACKLOG
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum IssueStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
  CLOSED
}
